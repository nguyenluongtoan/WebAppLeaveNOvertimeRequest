@model WebApplication2LeaveAndOverTimeReqestToolHasLogin.Models.LeaveRequest
@using WebApplication2LeaveAndOverTimeReqestToolHasLogin.Utils
@{
    ViewBag.Title = "Create";

    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "Full",
        Value = "1"
    });
    listItems.Add(new SelectListItem
    {
        Text = "AM",
        Value = "2",
        Selected = true
    });
    listItems.Add(new SelectListItem
    {
        Text = "PM",
        Value = "3"
    });


}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>LeaveRequest</h4>
        <h6>
            Please submit the times you need to take off work and the type of leave you are taking.
        </h6>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Account, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Account, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Account, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LeaderAccount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.LeaderAccount,
                        new SelectList(ViewBag.AllLeaders),
                        "Select Leader", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LeaderAccount, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LeaderEmailAddress, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LeaderEmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LeaderEmailAddress, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LeaveDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LeaveDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LeaveDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NoDayOff, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NoDayOff, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0", step = "0.25" } })
                @Html.ValidationMessageFor(model => model.NoDayOff, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.FullAmPm, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.FullAmPm,
                     new SelectList(ViewBag.Type),
                            "Select Type", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FullAmPm, "", new { @class = "text-danger" })
                </div>
                <div class="col-md-10">
                    Full-1; AM-2; PM-3
                </div>
            </div>*@
        <div class="form-group">
            @Html.LabelFor(model => model.FullAmPm, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.FullAmPm,
                 listItems,
                        "Select Type", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullAmPm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TypeOfLeave, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.TypeOfLeave, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.TypeOfLeave, "", new { @class = "text-danger" })*@

                @Html.RadioButtonFor(model => model.TypeOfLeave, TYPE_OF_LEAVE_REQUEST.SICK_LEAVE)
                @TYPE_OF_LEAVE_REQUEST.SICK_LEAVE<br />
                @Html.RadioButtonFor(model => model.TypeOfLeave, TYPE_OF_LEAVE_REQUEST.ANNUAL_LEAVE)
                @TYPE_OF_LEAVE_REQUEST.ANNUAL_LEAVE<br />
                @Html.RadioButtonFor(model => model.TypeOfLeave, TYPE_OF_LEAVE_REQUEST.COMPESATIVE_LEAVE)
                @TYPE_OF_LEAVE_REQUEST.COMPESATIVE_LEAVE<br />
                @Html.RadioButtonFor(model => model.TypeOfLeave, TYPE_OF_LEAVE_REQUEST.OT_LAST_YEAR_LEAVE)
                @TYPE_OF_LEAVE_REQUEST.OT_LAST_YEAR_LEAVE<br />
                @Html.RadioButtonFor(model => model.TypeOfLeave, TYPE_OF_LEAVE_REQUEST.WITHOUT_PAY_LEAVE)
                @TYPE_OF_LEAVE_REQUEST.WITHOUT_PAY_LEAVE<br />
                @Html.RadioButtonFor(model => model.TypeOfLeave, TYPE_OF_LEAVE_REQUEST.COMPASSTIONATE_LEAVE)
                @TYPE_OF_LEAVE_REQUEST.COMPASSTIONATE_LEAVE<br />
                @Html.RadioButtonFor(model => model.TypeOfLeave, TYPE_OF_LEAVE_REQUEST.ENGAGEMENT_LEAVE)
                @TYPE_OF_LEAVE_REQUEST.ENGAGEMENT_LEAVE<br />
                @Html.RadioButtonFor(model => model.TypeOfLeave, TYPE_OF_LEAVE_REQUEST.MATERNITY_3_LEAVE)
                @TYPE_OF_LEAVE_REQUEST.MATERNITY_3_LEAVE<br />
                @Html.RadioButtonFor(model => model.TypeOfLeave, TYPE_OF_LEAVE_REQUEST.MATERNITY_7_LEAVE)
                @TYPE_OF_LEAVE_REQUEST.MATERNITY_7_LEAVE<br />
                @if (!ViewBag.AllowCompensativeLeave)
                {
                    <span class="text-danger field-validation-error" data-valmsg-for="" data-valmsg-replace="">
                        <span id="" class="">Quá ngày nghỉ bù.</span>
                    </span>
                }
                @*@if (!ViewBag.AllowAnnualLeave)
        {
            <span class="text-danger field-validation-error" data-valmsg-for="" data-valmsg-replace="">
                <span id="" class="">Quá ngày nghỉ phép.</span>
            </span>
        }*@

            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.ReasonForLeave, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.ReasonForLeave, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReasonForLeave, "", new { @class = "text-danger" })*@
                @Html.RadioButtonFor(model => model.ReasonForLeave, "Bereavement leave (Immediate Family) - Gia đình có việc gấp")
                Bereavement leave (Immediate Family) - Gia đình có việc gấp<br />
                @Html.RadioButtonFor(model => model.ReasonForLeave, "Personal leave (Việc cá nhân ko tiện tiết lộ)")
                Personal leave (Việc cá nhân ko tiện tiết lộ)<br />
                @Html.RadioButtonFor(model => model.ReasonForLeave, "Travelling")
                Travelling<br />
                @Html.RadioButtonFor(model => model.ReasonForLeave, "Sickness")
                Sickness<br />
                @Html.RadioButtonFor(model => model.ReasonForLeave, "Other")
                Other<br />
            </div>
        </div>




        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @*<script src="@Url.Content("~/Scripts/custom.js")"></script>*@
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
    @Scripts.Render("~/bundles/jqueryval")

    <script>
        var AllLeaders2 = @Html.Raw(Json.Encode(ViewBag.AllLeaders2));
        $('select[name="LeaderAccount"]').change(function () {
            var optionSelected = $('select[name="LeaderAccount"]', this);
            var leaderAcc = this.value;

            for (var i = 0; i < AllLeaders2.length; i++) {
                console.log(AllLeaders2[i]);
                console.log(AllLeaders2[i].Account + "---" + leaderAcc);
                if (AllLeaders2[i].Account == leaderAcc) {
                    $('input[name="LeaderEmailAddress"]').val(AllLeaders2[i].EmailAddress);
                    break;
                }
            }
        });

        $(function () {
            var availableTags = @Html.Raw(Json.Encode(ViewBag.AllMembers));
            //var availableTags = [
            //  "ActionScript", "AppleScript", "Asp", "BASIC", "C", "C++", "Clojure",
            //  "COBOL", "ColdFusion", "Erlang", "Fortran", "Groovy", "Haskell",
            //  "Java", "JavaScript", "Lisp", "Perl", "PHP", "Python",
            //  "Ruby", "Scala", "Scheme"
            //];
            $( "#Account" ).autocomplete({
              source: availableTags
            });
        });

    </script>


}
