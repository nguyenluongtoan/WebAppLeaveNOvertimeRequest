@model WebApplication2LeaveAndOverTimeReqestToolHasLogin.Models.LeaveRequest
@using WebApplication2LeaveAndOverTimeReqestToolHasLogin.Utils
@{
    ViewBag.Title = "Edit";

    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "Full",
        Value = "0"
    });
    listItems.Add(new SelectListItem
    {
        Text = "AM",
        Value = "1",
        Selected = true
    });
    listItems.Add(new SelectListItem
    {
        Text = "PM",
        Value = "2"
    });

    List<SelectListItem> listStatus = new List<SelectListItem>();
    listStatus.Add(new SelectListItem
    {
        Text = "Open",
        Value = "0"
    });
    listStatus.Add(new SelectListItem
    {
        Text = "Approved",
        Value = "1"
    });
    listStatus.Add(new SelectListItem
    {
        Text = "Rejected",
        Value = "2"
    });
}
<style>
    .shorter {
        width: 80px;
        padding: 0;
    }

    .shprter {
        width: 200px;
    }

    .form-control {
        display: inline;
    }
</style>
<h3>Edit</h3>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.LeaveRequestID)

        <div class="form-group">
            @Html.LabelFor(model => model.TimeStamp, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TimeStamp, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TimeStamp, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Account, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Account, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Account, "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
            </div>

        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.LeaderAccount, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.LeaderAccount,
                        new SelectList(ViewBag.AllLeaders),
                        "Select Leader", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LeaderAccount, "", new { @class = "text-danger" })
                @Html.EditorFor(model => model.LeaderEmailAddress, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LeaderEmailAddress, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.LeaveDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="col-md-2 shorter">
                    @{
                        var year = Model.LeaveDate.Year;
                        var month = Model.LeaveDate.Month;
                        var day = Model.LeaveDate.Day;

                    }
                    @day  / @month  / @year
                </div>
                <div class="col-md-3 shprter">
                    @Html.EditorFor(model => model.LeaveDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LeaveDate, "", new { @class = "text-danger" })
                </div>


            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NoDayOff, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NoDayOff, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NoDayOff, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FullAmPm, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.FullAmPm,
                listItems,
                        "Select Type", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FullAmPm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TypeOfLeave, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.TypeOfLeave, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TypeOfLeave, "", new { @class = "text-danger" })*@

                @Html.RadioButtonFor(model => model.TypeOfLeave, TYPE_OF_LEAVE_REQUEST.SICK_LEAVE)
                @TYPE_OF_LEAVE_REQUEST.SICK_LEAVE<br />
                @Html.RadioButtonFor(model => model.TypeOfLeave, TYPE_OF_LEAVE_REQUEST.ANNUAL_LEAVE)
                @TYPE_OF_LEAVE_REQUEST.ANNUAL_LEAVE<br />
                @Html.RadioButtonFor(model => model.TypeOfLeave, TYPE_OF_LEAVE_REQUEST.COMPESATIVE_LEAVE)
                @TYPE_OF_LEAVE_REQUEST.COMPESATIVE_LEAVE<br />
                @Html.RadioButtonFor(model => model.TypeOfLeave, TYPE_OF_LEAVE_REQUEST.OT_LAST_YEAR_LEAVE)
                @TYPE_OF_LEAVE_REQUEST.OT_LAST_YEAR_LEAVE<br />
                @Html.RadioButtonFor(model => model.TypeOfLeave, TYPE_OF_LEAVE_REQUEST.WITHOUT_PAY_LEAVE)
                @TYPE_OF_LEAVE_REQUEST.WITHOUT_PAY_LEAVE<br />
                @Html.RadioButtonFor(model => model.TypeOfLeave, TYPE_OF_LEAVE_REQUEST.COMPASSTIONATE_LEAVE)
                @TYPE_OF_LEAVE_REQUEST.COMPASSTIONATE_LEAVE<br />
                @Html.RadioButtonFor(model => model.TypeOfLeave, TYPE_OF_LEAVE_REQUEST.ENGAGEMENT_LEAVE)
                @TYPE_OF_LEAVE_REQUEST.ENGAGEMENT_LEAVE<br />
                @Html.RadioButtonFor(model => model.TypeOfLeave, TYPE_OF_LEAVE_REQUEST.MATERNITY_3_LEAVE)
                @TYPE_OF_LEAVE_REQUEST.MATERNITY_3_LEAVE<br />
                @Html.RadioButtonFor(model => model.TypeOfLeave, TYPE_OF_LEAVE_REQUEST.MATERNITY_7_LEAVE)
                @TYPE_OF_LEAVE_REQUEST.MATERNITY_7_LEAVE<br />

            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.ReasonForLeave, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @*@Html.EditorFor(model => model.ReasonForLeave, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ReasonForLeave, "", new { @class = "text-danger" })*@
                @Html.RadioButtonFor(model => model.ReasonForLeave, "Bereavement leave (Immediate Family) - Gia đình có việc gấp")
                Bereavement leave (Immediate Family) - Gia đình có việc gấp<br />
                @Html.RadioButtonFor(model => model.ReasonForLeave, "Personal leave (Việc cá nhân ko tiện tiết lộ)")
                Personal leave (Việc cá nhân ko tiện tiết lộ)<br />
                @Html.RadioButtonFor(model => model.ReasonForLeave, "Travelling")
                Travelling<br />
                @Html.RadioButtonFor(model => model.ReasonForLeave, "Sickness")
                Sickness<br />
                @Html.RadioButtonFor(model => model.ReasonForLeave, "Other")
                Other<br />
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.Status,
                listStatus,
                        "Select Type", new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LeaderComment, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LeaderComment, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LeaderComment, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Month, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Month, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Month, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
    <link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script>
        var AllLeaders2 = @Html.Raw(Json.Encode(ViewBag.AllLeaders2));
        $('select[name="LeaderAccount"]').change(function () {
            var optionSelected = $('select[name="LeaderAccount"]', this);
            var leaderAcc = this.value;

            for (var i = 0; i < AllLeaders2.length; i++) {
                console.log(AllLeaders2[i]);
                console.log(AllLeaders2[i].Account + "---" + leaderAcc);
                if (AllLeaders2[i].Account == leaderAcc) {
                    console.log(AllLeaders2);
                    console.log(AllLeaders2[i].EmailAddress);
                    $('input[name="LeaderEmailAddress"]').val(AllLeaders2[i].EmailAddress);
                    break;
                }
            }
        });

        $(function () {
            var availableTags = @Html.Raw(Json.Encode(ViewBag.AllMembers));
            //var availableTags = [
            //  "ActionScript", "AppleScript", "Asp", "BASIC", "C", "C++", "Clojure",
            //  "COBOL", "ColdFusion", "Erlang", "Fortran", "Groovy", "Haskell",
            //  "Java", "JavaScript", "Lisp", "Perl", "PHP", "Python",
            //  "Ruby", "Scala", "Scheme"
            //];
            $( "#Account" ).autocomplete({
              source: availableTags
            });
        });

        function addTailEmail(type) {
            //alert(1);
            var current = $('#Account').val();
            console.log(type);
            console.log(current);
            if (type == 'gmail') {
                $('#EmailAddress').val(current + '.lqa@gmail.com');
            }
            if (type == 'lqa') {
                $('#EmailAddress').val(current + '@@lqa.com.vn');
            }

        }

</script>
}